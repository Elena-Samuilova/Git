JSON
 4. Создать внешний репозиторий c названием JSON. 
	(New, Repository name JSON,add a readme file +, create )
 5. Клонировать репозиторий JSON на локальный компьютер.
	git clone https://github.com/Elena-Samuilova/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
	cd JSON
	touch new.json
 7. Добавить файл под гит.
	git add new.json 				
 8. Закоммитить файл.
	git commit -m "Create new.json"
 9. Отправить файл на внешний GitHub репозиторий.
	git push origin main
 10. Отредактировать содержание файла “new.json” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата).
Всё написать в формате JSON.
	cat >> new.json
11. Отправить изменения на внешний репозиторий.
	git commit -am "Change new.json"
	git push origin main
12. Создать файл preferences.json
	touch preferences.json
13. В файл preferences.json добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, 
страна которую хотели бы посетить) в формате JSON.
	cat >> preferences.json
14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	cat >> skills.json
15. Отправить сразу 2 файла на внешний репозиторий.
 	git add preferences.json skills.json (or .)
	git commit -m "add new files"
	git push origin main
16. На веб интерфейсе создать файл bug_report.json.
	-add file
	-Create new file
	bug_report.json
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes (Button)
18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	Click file
	Edit this file (Button)
19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes (Button)
20. Синхронизировать внешний и локальный репозиторий JSON
	git pull origin main

XML
21. Создать внешний репозиторий c названием XML.
	(New, Repository name XML,add a readme file +, create )
22. Клонировать репозиторий XML на локальный компьютер.
	git clone https://github.com/Elena-Samuilova/XML.git
23. Внутри локального XML создать файл “new.xml”.
	touch new.xml
24. Добавить файл под гит.
	git add new.xml (или git add .)
25. Закоммитить файл.
	git commit -m "Create new.xml"
26. Отправить файл на внешний GitHub репозиторий.
	git push origin main
27. Отредактировать содержание файла “new.xml” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате XML.
 cat >> new.xml
28. Отправить изменения на внешний репозиторий.
	git commit -am "Change new.xml"
	git push origin main
29. Создать файл preferences.xml
	touch preferences.xml
30. В файл preferences.xml добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, 
страна которую хотели бы посетить) в формате XML.
	cat >> preferences.xml
31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены 
на курсе в формате XML
  	cat >> sklls.xml
32. Сделать коммит в одну строку.
		git add . 
	git commit -m "add new files"	
 33. Отправить сразу 2 файла на внешний репозиторий.
	git push origin main
 34. На веб интерфейсе создать файл bug_report.xml.
	-add file
	-Create new file
	bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes (Button)
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг 
репорт в формате XML.
	Click file
	Edit this file (Button)
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes (Button)
 38. Синхронизировать внешний и локальный репозиторий XML
	git pull origin main
